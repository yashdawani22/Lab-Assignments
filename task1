#include<bits/stdc++.h>   
using namespace std; 
  
struct twoStacks 
{ 
  int *arr; 
  int size; 
  int top1, top2; 
  twoStacks(int n) 
  { 
    size = n; 
    arr = new int[n]; 
    top1 = -1; 
    top2 = size; 
  } 
  void push1(int x) 
  {  
    if (top1 < top2 - 1) 
    { 
      top1++; 
      arr[top1] = x; 
    } 
    else
    { 
     cout << "Stack Overflow"; 
     exit(1); 
    } 
  } 
  void push2(int x) 
  { 
    if (top1 < top2 - 1) 
    { 
      top2--; 
      arr[top2] = x; 
    } 
    else
    { 
      cout << "Stack Overflow"; 
      exit(1); 
    } 
  } 
  int pop1() 
  { 
    if (top1 >= 0 ) 
    { 
      int x = arr[top1]; 
      top1--; 
      return x; 
    } 
    else return -1;
  } 
  int pop2() 
  { 
    if (top2 < size) 
    { 
      int x = arr[top2]; 
      top2++; 
      return x; 
    } 
    else return -1;
  } 
};

int main() 
{ 
    int n,m,o,s,i,index=0;
    float mean,median,mode,std_dev,sqmean;
    cin>>n>>m;
    float country[200];
    twoStacks howard(200);
    while(m--){
        cin>>o>>s>>i;
        if(o==1){
            if(s==1){
                howard.push1(i);
            }else{
                howard.push2(i);
            }
            country[index]=i;index++;
        }else{
           if(s==1) howard.pop1();
           else howard.pop2(); 
        }
    }
    sort(country,country+index);
    float sum=0;
    for(int i=0;i<index;i++){
        sum+=country[i];
    }mean=sum/index;
    if(index%2){
        median=(country[index/2]+country[index/2-1])/2;
    }else{
        median=country[index/2];
    }
    int freq=1,maxfreq=0;
    for(int i=0;i<index-1;i++){
        if(country[i]==country[i+1]){
            freq++;
        }else{
            if(maxfreq<freq){
                maxfreq=freq;
                mode=country[i];
            }
        }
    }sum=0;
    for(int i=0;i<index;i++){
        sum += pow(country[i],2);
    }sqmean=sum/index;
    std_dev=sqrt(sqmean-pow(mean,2));
    cout<<mean<<" "<<median<<" "<<mode<<" "<<std_dev<<endl;
    int temp;
    while(1){temp=howard.pop1();if(temp==-1)break;
        cout<<temp<<" ";
    }cout<<endl;
    while(1){temp=howard.pop2();if(temp==-1)break;
        cout<<temp<<" ";
    }
    return 0; 
}
